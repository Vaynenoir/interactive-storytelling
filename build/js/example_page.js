function inWindow(t){if(!$(t).length)return!1;var o=$(t).offset().top,s=$(t).offset().top+$(t).outerHeight(),e=$(window).scrollTop()+$(window).height(),a=$(window).scrollTop();return e>o&&a<s}function sectionCounter(){$(".js-section").each(function(t){var o=$(window).scrollTop(),s=$(this).offset().top,e=$(this).attr("data-zoom"),a=$(this).attr("data-pos"),i=$(this).attr("data-pos_large"),n=$(this).attr("data-pos_medium"),r=$(this).attr("data-pos_small"),d=$(this).attr("data-pos_extrasmall");s<=o?($(this).addClass("active"),$(window).width()>950&&$(".bg_svg").stop(400).animate({zoom:e,left:a},200),$(window).width()<900&&$(".bg_svg").stop(400).animate({zoom:"100%",left:i},200),$(window).width()<600&&$(".bg_svg").stop(400).animate({zoom:"100%",left:n},200),$(window).width()<500&&($(".bg_svg").stop(400).animate({zoom:"100%",left:r},200),$(".st0").css("opacity","0.4"),$(".st2").css("opacity","0.5")),$(window).width()<400&&$(".bg_svg").stop(400).animate({zoom:"100%",left:d},200),$(".st2").stop(200).fadeIn(200),$(".path_circle_2").stop().fadeIn(400),$(".path_circle_3").stop().fadeIn(400)):($(this).removeClass("active"),$(".js-section").hasClass("active")||($(".bg_svg").stop().animate({zoom:"100%",left:"40%"},400),$(window).width()<900&&$(".bg_svg").stop().animate({zoom:"100%",left:"10%"},400),$(window).width()<600&&$(".bg_svg").stop().animate({zoom:"100%",left:"10%"},400)))});var t=[];$(".slick-current").each(function(o){t.push($(this))});var o=0;$(t).each(function(t,s){if(inWindow($(this))){o++;var e=$(this).attr("data-pos-x"),a=$(this).attr("data-pos-y"),i=$(this)[0].getBoundingClientRect();i.top,$(this).height();$(path1).attr("d","M"+e+" "+a+" L"+-i.left+" "+i.top+" L"+-i.left+" "+(i.bottom-30)),$(path1).css("position","relative"),$(path1).attr("fill","#47DBB4"),$(path1).attr("opacity",".1")}}),o>0?$(path1).fadeIn(900):$(path1).fadeOut(900)}$(document).ready(function(){jQuery.scrollSpeed(100,2e3),$(".slider").slick({slidesToShow:1,slidesToScroll:1,autoplay:!0,autoplaySpeed:2e3,prevArrow:!1,nextArrow:!1})});var path1=document.createElementNS("http://www.w3.org/2000/svg","path");$(path1).css("display","none");var path2=document.createElementNS("http://www.w3.org/2000/svg","path");$(document).ready(function(){var t=document.querySelector(".st0").getTotalLength();$(window).width()>500&&($(".bg_svg svg").append(path1),$(".bg_svg svg").append(path2));$(".st0").css("stroke-dashoffset"),$(".st0").css({"stroke-dashoffset":t,"stroke-dasharray":t+" "+t});$(window).scroll(function(){var o=$(window).scrollTop()/($("html").height()-$(window).height())*100,s=t,e=o*(s/200),a=s-e,i=2220,n=1900,r=1349,d=1230,h=1670;console.log(a),a<i&&a>n?($(".st0").css("stroke-dashoffset",i),console.log("if")):a<n?(console.log("else if"),$(".st0").css("stroke-dashoffset",i-(e-678)),a<r&&a>d?($(".st0").css("stroke-dashoffset",h),console.log(e),console.log("123213"),console.log(s-e)):s-e<r&&$(".st0").css("stroke-dashoffset",s-e)):$(".st0").css("stroke-dashoffset",s-e),sectionCounter()})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImV4YW1wbGVfcGFnZS5qcyJdLCJuYW1lcyI6WyJpbldpbmRvdyIsInMiLCIkIiwibGVuZ3RoIiwiaW1nX3RvcF9vZmZzZXQiLCJvZmZzZXQiLCJ0b3AiLCJpbWdfYm90dG9tIiwib3V0ZXJIZWlnaHQiLCJib3R0b21PZlNjcmVlbiIsIndpbmRvdyIsInNjcm9sbFRvcCIsImhlaWdodCIsInRvcE9mU2NyZWVuIiwic2VjdGlvbkNvdW50ZXIiLCJlYWNoIiwiaSIsInNjcm9sbENvdW50IiwidG9wT2Zmc2V0IiwidGhpcyIsImRhdGFab29tIiwiYXR0ciIsImRhdGFQb3MiLCJkYXRhUG9zTGFyZ2UiLCJkYXRhUG9zTWVkaXVtIiwiZGF0YVBvc1NtYWxsIiwiZGF0YVBvc0V4dHJhU21hbGwiLCJhZGRDbGFzcyIsIndpZHRoIiwic3RvcCIsImFuaW1hdGUiLCJ6b29tIiwibGVmdCIsImNzcyIsImZhZGVJbiIsInJlbW92ZUNsYXNzIiwiaGFzQ2xhc3MiLCJhcnJJbWdJRCIsImVsIiwicHVzaCIsInZpc19jb3VudCIsImN4IiwiY3kiLCJDb29yZGluYXRlcyIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInBhdGgxIiwiYm90dG9tIiwiZmFkZU91dCIsImRvY3VtZW50IiwicmVhZHkiLCJqUXVlcnkiLCJzY3JvbGxTcGVlZCIsInNsaWNrIiwic2xpZGVzVG9TaG93Iiwic2xpZGVzVG9TY3JvbGwiLCJhdXRvcGxheSIsImF1dG9wbGF5U3BlZWQiLCJwcmV2QXJyb3ciLCJuZXh0QXJyb3ciLCJjcmVhdGVFbGVtZW50TlMiLCJwYXRoMiIsInF1ZXJ5U2VsZWN0b3IiLCJnZXRUb3RhbExlbmd0aCIsImFwcGVuZCIsInN0cm9rZS1kYXNob2Zmc2V0Iiwic3Ryb2tlLWRhc2hhcnJheSIsInNjcm9sbCIsIiRwZXJjZW50YWdlQ29tcGxldGUiLCIkbmV3VW5pdCIsIiRvZmZzZXRVbml0Iiwib2Zmc2V0Q291bnRlciIsIlN0b3BzIiwiY29uc29sZSIsImxvZyJdLCJtYXBwaW5n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LEtBSnJCQSxFQUt5QixLQUc3QkMsUUFBUUMsSUFBSUgsR0FLUkEsRUFBZ0JDLEdBQXlCRCxFQUFnQkMsR0FDekRyRSxFQUFFLFFBQVErQixJQUFJLG9CQUFxQnNDLEdBQ25DQyxRQUFRQyxJQUFJLE9BQ0xILEVBQWdCQyxHQUV2QkMsUUFBUUMsSUFBSSxXQUNadkUsRUFBRSxRQUFRK0IsSUFBSSxvQkFBc0JzQyxHQUF5QkYsRUFBYyxNQUN2RUMsRUFBZ0JDLEdBQTBCRCxFQUFnQkMsR0FDMURyRSxFQUFFLFFBQVErQixJQUFJLG9CQUFxQnNDLEdBQ25DQyxRQUFRQyxJQUFJSixHQUNaRyxRQUFRQyxJQUFJLFVBQ1pELFFBQVFDLElBQUtMLEVBQVcsSUFFaEJBLEVBQVcsRUFBaUJHLEdBQ3BDckUsRUFBRSxRQUFRK0IsSUFBSSxvQkFBc0JtQyxFQUFXLElBR25EbEUsRUFBRSxRQUFRK0IsSUFBSSxvQkFBc0JtQyxFQUFXLEdBR25EdEQiLCJmaWxlIjoiZXhhbXBsZV9wYWdlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIGZ1bmN0aW9uIGluV2luZG93KHMpIHtcclxuICAgICBpZiAoISQocykubGVuZ3RoKSByZXR1cm4gZmFsc2U7IC8vIGVsZW1lbnQgbm90IGZvdW5kXHJcblxyXG4gICAgIHZhciBpbWdfdG9wX29mZnNldCA9ICQocykub2Zmc2V0KCkudG9wO1xyXG4gICAgIHZhciBpbWdfYm90dG9tID0gJChzKS5vZmZzZXQoKS50b3AgKyAkKHMpLm91dGVySGVpZ2h0KCk7XHJcbiAgICAgdmFyIGJvdHRvbU9mU2NyZWVuID0gJCh3aW5kb3cpLnNjcm9sbFRvcCgpICsgJCh3aW5kb3cpLmhlaWdodCgpO1xyXG4gICAgIHZhciB0b3BPZlNjcmVlbiA9ICQod2luZG93KS5zY3JvbGxUb3AoKTtcclxuXHJcbiAgICAgcmV0dXJuIChib3R0b21PZlNjcmVlbiA+IGltZ190b3Bfb2Zmc2V0KSAmJiAodG9wT2ZTY3JlZW4gPCBpbWdfYm90dG9tKTtcclxuIH1cclxuICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkge1xyXG4gICAgIC8vQ2hyb21lIFNtb290aCBTY3JvbGxcclxuXHJcbiAgICAgLy8gRGVmYXVsdFxyXG4gICAgIGpRdWVyeS5zY3JvbGxTcGVlZCgxMDAsIDIwMDApO1xyXG5cclxuICAgICAvLyBDdXN0b20gRWFzaW5nXHJcblxyXG4gICAgICAkKCcuc2xpZGVyJykuc2xpY2soe1xyXG4gICAgICAgXCJzbGlkZXNUb1Nob3dcIjogMSxcclxuICAgICAgIFwic2xpZGVzVG9TY3JvbGxcIjogMSxcclxuICAgICAgXHRhdXRvcGxheTogdHJ1ZSxcclxuICAgICAgXHRhdXRvcGxheVNwZWVkOiAyMDAwLFxyXG4gICAgICBcdHByZXZBcnJvdzogZmFsc2UsXHJcbiAgICBcdFx0bmV4dEFycm93OiBmYWxzZVxyXG4gICAgICB9KTtcclxuXHJcbiB9KTtcclxuXHJcbiB2YXIgcGF0aDEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJywgJ3BhdGgnKTtcclxuICQocGF0aDEpLmNzcygnZGlzcGxheScsICdub25lJyk7XHJcbiB2YXIgcGF0aDIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoJ2h0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnJywgJ3BhdGgnKTtcclxuXHJcbiBmdW5jdGlvbiBzZWN0aW9uQ291bnRlcigpIHtcclxuICAgICAkKCcuanMtc2VjdGlvbicpLmVhY2goZnVuY3Rpb24oaSkge1xyXG4gICAgICAgICB2YXIgc2Nyb2xsQ291bnQgPSAkKHdpbmRvdykuc2Nyb2xsVG9wKCk7XHJcbiAgICAgICAgIHZhciB0b3BPZmZzZXQgPSAkKHRoaXMpLm9mZnNldCgpLnRvcDtcclxuICAgICAgICAgdmFyIGRhdGFab29tID0gJCh0aGlzKS5hdHRyKFwiZGF0YS16b29tXCIpO1xyXG4gICAgICAgICB2YXIgZGF0YVBvcyA9ICQodGhpcykuYXR0cihcImRhdGEtcG9zXCIpO1xyXG4gICAgICAgICB2YXIgZGF0YVBvc0xhcmdlID0gJCh0aGlzKS5hdHRyKCdkYXRhLXBvc19sYXJnZScpO1xyXG4gICAgICAgICB2YXIgZGF0YVBvc01lZGl1bSA9ICQodGhpcykuYXR0cignZGF0YS1wb3NfbWVkaXVtJylcclxuICAgICAgICAgdmFyIGRhdGFQb3NTbWFsbCA9ICQodGhpcykuYXR0cignZGF0YS1wb3Nfc21hbGwnKTtcclxuICAgICAgICAgdmFyIGRhdGFQb3NFeHRyYVNtYWxsID0gJCh0aGlzKS5hdHRyKCdkYXRhLXBvc19leHRyYXNtYWxsJyk7XHJcblxyXG4gICAgICAgICBpZiAodG9wT2Zmc2V0IDw9IHNjcm9sbENvdW50KSB7XHJcblxyXG4gICAgICAgICAgICAgJCh0aGlzKS5hZGRDbGFzcyhcImFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgIGlmKCQod2luZG93KS53aWR0aCgpID4gOTUwKXtcclxuICAgICAgICAgICAgICQoJy5iZ19zdmcnKS5zdG9wKDQwMCkuYW5pbWF0ZSh7XHJcbiAgICAgICAgICAgICAgICAgem9vbTogZGF0YVpvb20sXHJcbiAgICAgICAgICAgICAgICAgbGVmdDogZGF0YVBvc1xyXG4gICAgICAgICAgICAgfSwgMjAwKTtcclxuICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgIGlmKCQod2luZG93KS53aWR0aCgpIDwgOTAwKXtcclxuICAgICAgICAgICAgICQoJy5iZ19zdmcnKS5zdG9wKDQwMCkuYW5pbWF0ZSh7XHJcbiAgICAgICAgICAgICAgICAgem9vbTogXCIxMDAlXCIsXHJcbiAgICAgICAgICAgICAgICAgbGVmdDogZGF0YVBvc0xhcmdlXHJcbiAgICAgICAgICAgICB9LCAyMDApOyAgICAgICAgICAgICBcdFxyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgaWYoJCh3aW5kb3cpLndpZHRoKCkgPCA2MDApe1xyXG4gICAgICAgICAgICAgJCgnLmJnX3N2ZycpLnN0b3AoNDAwKS5hbmltYXRlKHtcclxuICAgICAgICAgICAgICAgICB6b29tOiBcIjEwMCVcIixcclxuICAgICAgICAgICAgICAgICBsZWZ0OiBkYXRhUG9zTWVkaXVtXHJcbiAgICAgICAgICAgICB9LCAyMDApOyAgICAgICAgICAgICBcdFxyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgaWYoJCh3aW5kb3cpLndpZHRoKCkgPCA1MDApe1xyXG4gICAgICAgICAgICAgJCgnLmJnX3N2ZycpLnN0b3AoNDAwKS5hbmltYXRlKHtcclxuICAgICAgICAgICAgICAgICB6b29tOiBcIjEwMCVcIixcclxuICAgICAgICAgICAgICAgICBsZWZ0OiBkYXRhUG9zU21hbGxcclxuICAgICAgICAgICAgIH0sIDIwMCk7XHJcblxyXG4gICAgICAgICAgICAgJCgnLnN0MCcpLmNzcygnb3BhY2l0eScsICcwLjQnKTtcclxuICAgICAgICAgICAgICQoJy5zdDInKS5jc3MoJ29wYWNpdHknLCAnMC41Jyk7XHJcbiAgICAgICAgICAgICB9IFxyXG4gICAgICAgICAgICAgaWYoJCh3aW5kb3cpLndpZHRoKCkgPCA0MDApe1xyXG4gICAgICAgICAgICAgJCgnLmJnX3N2ZycpLnN0b3AoNDAwKS5hbmltYXRlKHtcclxuICAgICAgICAgICAgICAgICB6b29tOiBcIjEwMCVcIixcclxuICAgICAgICAgICAgICAgICBsZWZ0OiBkYXRhUG9zRXh0cmFTbWFsbFxyXG4gICAgICAgICAgICAgfSwgMjAwKTsgICAgICAgICAgICAgIFxyXG4gICAgICAgICAgIH1cclxuICAgICAgICAgICAgICQoJy5zdDInKS5zdG9wKDIwMCkuZmFkZUluKDIwMCk7XHJcbiAgICAgICAgICAgICAkKCcucGF0aF9jaXJjbGVfMicpLnN0b3AoKS5mYWRlSW4oNDAwKTtcclxuICAgICAgICAgICAgICQoJy5wYXRoX2NpcmNsZV8zJykuc3RvcCgpLmZhZGVJbig0MDApO1xyXG5cclxuXHJcblxyXG4gICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgJCh0aGlzKS5yZW1vdmVDbGFzcyhcImFjdGl2ZVwiKTtcclxuICAgICAgICAgICAgIGlmICghJCgnLmpzLXNlY3Rpb24nKS5oYXNDbGFzcyhcImFjdGl2ZVwiKSkge1xyXG4gICAgICAgICAgICAgICAgICQoJy5iZ19zdmcnKS5zdG9wKCkuYW5pbWF0ZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgIHpvb206IFwiMTAwJVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICBsZWZ0OiAnNDAlJ1xyXG4gICAgICAgICAgICAgICAgIH0sIDQwMCk7XHJcbiAgICAgICAgICAgICAgIGlmKCQod2luZG93KS53aWR0aCgpIDwgOTAwKXtcclxuICAgICAgICAgICAgICAgICAkKCcuYmdfc3ZnJykuc3RvcCgpLmFuaW1hdGUoe1xyXG4gICAgICAgICAgICAgICAgICAgICB6b29tOiBcIjEwMCVcIixcclxuICAgICAgICAgICAgICAgICAgICAgbGVmdDogJzEwJSdcclxuICAgICAgICAgICAgICAgICB9LCA0MDApOyAgICAgICAgICAgICAgIFx0XHJcbiAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgaWYoJCh3aW5kb3cpLndpZHRoKCkgPCA2MDApe1xyXG4gICAgICAgICAgICAgICAgICQoJy5iZ19zdmcnKS5zdG9wKCkuYW5pbWF0ZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgIHpvb206IFwiMTAwJVwiLFxyXG4gICAgICAgICAgICAgICAgICAgICBsZWZ0OiAnMTAlJ1xyXG4gICAgICAgICAgICAgICAgIH0sIDQwMCk7ICAgICAgICAgICAgICAgXHRcclxuICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgfVxyXG4gICAgICAgICB9XHJcblxyXG4gICAgIH0pO1xyXG5cclxuICAgICB2YXIgYXJySW1nSUQgPSBbXTtcclxuICAgICAkKCcuc2xpY2stY3VycmVudCcpLmVhY2goZnVuY3Rpb24oZWwpIHtcclxuXHJcbiAgICAgICAgIGFyckltZ0lELnB1c2goJCh0aGlzKSk7XHJcblxyXG4gICAgIH0pO1xyXG4gICAgIHZhciB2aXNfY291bnQgPSAwO1xyXG4gICAgIC8vIGNvbnNvbGUubG9nKGFyckltZ0lEKTtcclxuICAgICAkKGFyckltZ0lEKS5lYWNoKGZ1bmN0aW9uKGVsLCBpKSB7XHJcblxyXG5cclxuICAgICAgICAgaWYgKGluV2luZG93KCQodGhpcykpKSB7XHJcbiAgICAgICAgICAgICB2aXNfY291bnQrKztcclxuICAgICAgICAgICAgIHZhciBjeCA9ICQodGhpcykuYXR0cignZGF0YS1wb3MteCcpO1xyXG4gICAgICAgICAgICAgdmFyIGN5ID0gJCh0aGlzKS5hdHRyKCdkYXRhLXBvcy15Jyk7XHJcbiAgICAgICAgICAgICB2YXIgQ29vcmRpbmF0ZXMgPSAkKHRoaXMpWzBdLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG5cclxuICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiVG9wOlwiK0Nvb3JkaW5hdGVzLnRvcCtcIiwgTGVmdDpcIitDb29yZGluYXRlcy5sZWZ0K1wiLCBSaWdodDpcIitDb29yZGluYXRlcy5yaWdodCtcIiwgQm90dG9tOlwiK0Nvb3JkaW5hdGVzLmJvdHRvbSk7XHJcbiAgICAgICAgICAgICB2YXIgYm90dG9tT2Zmc2V0SW1nID0gQ29vcmRpbmF0ZXMudG9wICsgJCh0aGlzKS5oZWlnaHQoKTtcclxuICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKENvb3JkaW5hdGVzKTtcclxuICAgICAgICAgICAgICQocGF0aDEpLmF0dHIoJ2QnLCBcIk1cIiArIGN4ICsgXCIgXCIgKyBjeSArIFwiIExcIiArICgtQ29vcmRpbmF0ZXMubGVmdCkgKyBcIiBcIiArIChDb29yZGluYXRlcy50b3ApICsgXCIgTFwiICsgKC1Db29yZGluYXRlcy5sZWZ0KSArIFwiIFwiICsgKENvb3JkaW5hdGVzLmJvdHRvbSAtIDMwKSk7XHJcbiAgICAgICAgICAgICAkKHBhdGgxKS5jc3MoJ3Bvc2l0aW9uJywgXCJyZWxhdGl2ZVwiKTtcclxuICAgICAgICAgICAgICQocGF0aDEpLmF0dHIoJ2ZpbGwnLCAnIzQ3REJCNCcpO1xyXG4gICAgICAgICAgICAgJChwYXRoMSkuYXR0cignb3BhY2l0eScsICcuMScpO1xyXG5cclxuICAgICAgICAgfVxyXG4gICAgIH0pO1xyXG5cclxuICAgICBpZiAodmlzX2NvdW50ID4gMCkge1xyXG4gICAgICAgICAkKHBhdGgxKS5mYWRlSW4oOTAwKTtcclxuICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAkKHBhdGgxKS5mYWRlT3V0KDkwMCk7XHJcbiAgICAgfVxyXG4gfVxyXG5cclxuXHJcbiAkKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHtcclxuICAgICB2YXIgcGF0aCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5zdDAnKTtcclxuICAgICB2YXIgbGVuZ3RoID0gcGF0aC5nZXRUb3RhbExlbmd0aCgpO1xyXG4gICAgIGlmKCQod2luZG93KS53aWR0aCgpID4gNTAwKXtcclxuICAgICAkKCcuYmdfc3ZnIHN2ZycpLmFwcGVuZChwYXRoMSk7XHJcbiAgICAgJCgnLmJnX3N2ZyBzdmcnKS5hcHBlbmQocGF0aDIpO1xyXG4gXHRcdFx0fVxyXG4gICAgIHZhciAkZGFzaE9mZnNldCA9ICQoJy5zdDAnKS5jc3MoXCJzdHJva2UtZGFzaG9mZnNldFwiKTtcclxuICAgICB2YXIgb2Zmc2V0RGFzaCA9ICQoJy5zdDAnKS5jc3Moe1xyXG4gICAgICAgICBcInN0cm9rZS1kYXNob2Zmc2V0XCI6IGxlbmd0aCxcclxuICAgICAgICAgXCJzdHJva2UtZGFzaGFycmF5XCI6IGxlbmd0aCArIFwiIFwiICsgbGVuZ3RoXHJcbiAgICAgfSk7XHJcblxyXG4gICAgIHZhciBFbmFibGVkID0gdHJ1ZTtcclxuXHJcbiAgICAgaWYgKEVuYWJsZWQgPT0gdHJ1ZSkge1xyXG4gICAgICAgICAkKHdpbmRvdykuc2Nyb2xsKGZ1bmN0aW9uIGxvbCgpIHtcclxuICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiaW1nIDEgPSBcIitpbldpbmRvdygnLmpzLWltYWdlMScpKTtcclxuICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiaW1nIDIgPSBcIitpbldpbmRvdygnLmpzLWltYWdlMicpKTtcclxuICAgICAgICAgICAgIHZhciAkcGVyY2VudGFnZUNvbXBsZXRlID0gKCgkKHdpbmRvdykuc2Nyb2xsVG9wKCkgLyAoJChcImh0bWxcIikuaGVpZ2h0KCkgLSAkKHdpbmRvdykuaGVpZ2h0KCkpKSAqIDEwMCk7XHJcblxyXG5cclxuXHJcblxyXG4gICAgICAgICAgICAgdmFyICRuZXdVbml0ID0gbGVuZ3RoOyAvL3BhcnNlSW50KCRkYXNoT2Zmc2V0LCAxMCk7XHJcbiAgICAgICAgICAgICB2YXIgJG9mZnNldFVuaXQgPSAkcGVyY2VudGFnZUNvbXBsZXRlICogKCRuZXdVbml0IC8gMjAwKTtcclxuICAgICAgICAgICAgIHZhciBvZmZzZXRDb3VudGVyID0gJG5ld1VuaXQgLSAoJG9mZnNldFVuaXQpO1xyXG4gICAgICAgICAgICAgLy8gY29uc29sZS5sb2cob2Zmc2V0Q291bnRlcik7XHJcbiAgICAgICAgICAgICB2YXIgJFN0b3BQb2ludCA9IDIyMjA7XHJcbiAgICAgICAgICAgICB2YXIgU3RvcHMgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgIEZpcnN0UG9pbnRTdGFydDogMjIyMCxcclxuICAgICAgICAgICAgICAgICAgICAgRmlyc3RQb2ludFN0b3A6IDE5MDAsXHJcbiAgICAgICAgICAgICAgICAgICAgIFNlY29uZFBvaW50U3RhcnQ6IDEzNDksXHJcbiAgICAgICAgICAgICAgICAgICAgIFNlY29uZFBvaW50U3RvcDogMTIzMCxcclxuICAgICAgICAgICAgICAgICAgICAgU2Vjb25kUG9pbnRTdG9wUmVhbDogMTY3MFxyXG4gICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygkb2Zmc2V0VW5pdCk7XHJcbiAgICAgICAgICAgICBjb25zb2xlLmxvZyhvZmZzZXRDb3VudGVyKTtcclxuXHJcblxyXG5cclxuXHJcbiAgICAgICAgICAgICBpZiAob2Zmc2V0Q291bnRlciA8IFN0b3BzLkZpcnN0UG9pbnRTdGFydCAmJiBvZmZzZXRDb3VudGVyID4gU3RvcHMuRmlyc3RQb2ludFN0b3ApIHtcclxuICAgICAgICAgICAgICAgICAkKCcuc3QwJykuY3NzKFwic3Ryb2tlLWRhc2hvZmZzZXRcIiwgU3RvcHMuRmlyc3RQb2ludFN0YXJ0KTtcclxuICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnaWYnKTtcclxuICAgICAgICAgICAgIH0gZWxzZSBpZiAob2Zmc2V0Q291bnRlciA8IFN0b3BzLkZpcnN0UG9pbnRTdG9wKSB7XHJcbiAgICAgICAgICAgICAgICAgRW5hYmxlZCA9PSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdlbHNlIGlmJyk7XHJcbiAgICAgICAgICAgICAgICAgJCgnLnN0MCcpLmNzcyhcInN0cm9rZS1kYXNob2Zmc2V0XCIsIChTdG9wcy5GaXJzdFBvaW50U3RhcnQgLSAoJG9mZnNldFVuaXQgLSA2NzgpKSk7XHJcbiAgICAgICAgICAgICAgICAgaWYgKG9mZnNldENvdW50ZXIgPCBTdG9wcy5TZWNvbmRQb2ludFN0YXJ0ICYmIG9mZnNldENvdW50ZXIgPiBTdG9wcy5TZWNvbmRQb2ludFN0b3ApIHtcclxuICAgICAgICAgICAgICAgICAgICAgJCgnLnN0MCcpLmNzcyhcInN0cm9rZS1kYXNob2Zmc2V0XCIsIFN0b3BzLlNlY29uZFBvaW50U3RvcFJlYWwpO1xyXG4gICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygkb2Zmc2V0VW5pdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCcxMjMyMTMnKTtcclxuICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coKCRuZXdVbml0IC0gKCRvZmZzZXRVbml0KSkpO1xyXG5cclxuICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCgkbmV3VW5pdCAtICgkb2Zmc2V0VW5pdCkpIDwgU3RvcHMuU2Vjb25kUG9pbnRTdGFydCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAkKCcuc3QwJykuY3NzKFwic3Ryb2tlLWRhc2hvZmZzZXRcIiwgKCRuZXdVbml0IC0gKCRvZmZzZXRVbml0KSkpO1xyXG4gICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgJCgnLnN0MCcpLmNzcyhcInN0cm9rZS1kYXNob2Zmc2V0XCIsICgkbmV3VW5pdCAtICgkb2Zmc2V0VW5pdCkpKTtcclxuICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICBzZWN0aW9uQ291bnRlcigpO1xyXG5cclxuXHJcbiAgICAgICAgIH0pO1xyXG4gICAgIH1cclxuXHJcbiB9KTsiXX0=
